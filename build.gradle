plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

// 全局设置
allprojects {
    apply plugin: 'java'

    group 'github.saukiya'
    version '1.0-SNAPSHOT'

    repositories {
        mavenCentral()

        //Github Project
        maven { url "https://jitpack.io" }
        //bStats-bukkit
        maven { url "https://repo.codemc.org/repository/maven-public" }
    }

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    dependencies {
        compileOnly 'com.github.PlaceholderAPI:PlaceholderAPI:2.10.9'
        compileOnly 'org.projectlombok:lombok:1.18.22'
        annotationProcessor 'org.projectlombok:lombok:1.18.22'
    }
}

// 子项目设置
subprojects {
    dependencies {
        compileOnly fileTree('lib')
        compileOnly getRootProject()
    }
}

dependencies {
    compileOnly fileTree("Module-NMS-V1_18_R1/lib")
    implementation 'org.bstats:bstats-bukkit:2.2.1'

    testImplementation fileTree("Module-NMS-V1_17_R1/lib")
    testImplementation getSubprojects()
    testImplementation 'com.github.PlaceholderAPI:PlaceholderAPI:2.10.9'
    testImplementation 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
}

shadowJar {
    // 过滤未使用的依赖
    minimize()
    // bStats重定向
    relocate('org.bstats', 'github.saukiya.sxitem.bstats')
    // 获得子模块的classes文件
    getSubprojects().forEach(sub -> {
        from(sub.getBuildDir().toString() + '/classes/java/main')
    })
    // 设置导出名称
    archiveFileName.set("${project.name}.jar")
    // 设置导出路径
    destinationDirectory.set(file("$rootDir/plugins/$project.version"))
}

//执行该task前必须执行子模块的task
shadowJar.dependsOn() {
    //执行所有子项目的classes
    getSubprojects().stream().map(sub -> sub.getPath() + ':classes').toList()
}

//gradle 需要对文件中含有的'$'进行转义: $ -> \$
processResources {
    expand(version: version)
}